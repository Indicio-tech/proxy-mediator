version: '3'

services:
  proxy:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
      PORT: 3000
      ENDPOINT: http://proxy:3000
      ENABLE_STORE: "true"
      REPO_URI: "sqlite://:memory:"
      REPO_KEY: integration-testing
      LOG_LEVEL: DEBUG
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3000/status" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 10s
      retries: 5

  alice:
    image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-0.9.0
    command: >
      start --label alice
      -it http 0.0.0.0 3000
      -ot http
      -e http://alice:3000
      --no-ledger
      --admin 0.0.0.0 3001
      --admin-insecure-mode
      --debug-connections
      --auto-accept-invites
      --auto-accept-requests
      --auto-ping-connection
      --log-level debug
    ports:
      - 3001:3001
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 10s
      retries: 5


  bob:
    image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-0.9.0
    command: >
      start --label bob
      -it http 0.0.0.0 3000
      -ot http
      -e http://bob:3000
      --no-ledger
      --admin 0.0.0.0 3001
      --admin-insecure-mode
      --debug-connections
      --auto-accept-invites
      --auto-accept-requests
      --auto-ping-connection
      --log-level debug
    ports:
      - 3002:3001
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 10s
      retries: 5

  external_mediator:
    image: ghcr.io/hyperledger/aries-cloudagent-python:py3.9-0.9.0
    command: >
      start --label external_mediator
      -it http 0.0.0.0 3000
      -it ws 0.0.0.0 3002
      -ot http
      -e http://reverse-proxy ws://reverse-proxy/ws
      --no-ledger
      --admin 0.0.0.0 3001
      --admin-insecure-mode
      --debug-connections
      --auto-accept-invites
      --auto-accept-requests
      --auto-ping-connection
      --log-level debug
      --open-mediation
      --enable-undelivered-queue
    ports:
      - 3003:3002
    healthcheck:
      test: curl -s -o /dev/null -w '%{http_code}' "http://localhost:3001/status/live" | grep "200" > /dev/null
      start_period: 30s
      interval: 7s
      timeout: 10s
      retries: 5

  reverse-proxy:
    image: nginx
    volumes:
      - ../docker/nginx.conf:/etc/nginx/templates/default.conf.template:z
    environment:
      MEDIATOR: external_mediator
      HTTP_PORT: 3000
      WS_PORT: 3002
    ports:
      - 8080:80
    depends_on:
      - external_mediator


  tests:
    container_name: juggernaut
    build:
      context: .
      dockerfile: ./Dockerfile.test.runner
    environment:
      - PROXY=http://proxy:3000
      - ALICE=http://alice:3001
      - BOB=http://bob:3001
      - EXTERNAL_MEDIATOR=http://external_mediator:3001
    depends_on:
      proxy:
        condition: service_healthy
      alice:
        condition: service_healthy
      bob:
        condition: service_healthy
      external_mediator:
        condition: service_healthy
      reverse-proxy:
        condition: service_started
