name: Tests
on:
  push:
    branches: [ main ]
  pull_request:

env:
  POETRY_VERSION: 1.4.2

jobs:
  test:
    name: Tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
      - name: Install dependencies
        run: poetry install
    - name: Run unit tests with pytest
      run: |
        poetry run pytest ./tests

  int:
    name: Integration Tests
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run integration tests
      run: |
        docker-compose -f ./int/docker-compose.yml run tests
    - name: Print logs on failure
      if: failure()
      run: |
        docker-compose -f ./int/docker-compose.yml logs
    - name: Clean up integration tests
      if: always()
      run: |
        docker-compose -f ./int/docker-compose.yml down
